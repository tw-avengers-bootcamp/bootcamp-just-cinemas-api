import org.flywaydb.gradle.task.*

buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.postgresql:postgresql:9.4.1211.jre7'
		classpath 'nu.studer:gradle-jooq-plugin:1.0.5'
		classpath "gradle.plugin.com.boxfuse.client:flyway-release:4.0.3"
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'nu.studer.jooq'
apply plugin: "org.flywaydb.flyway"
apply from: "configuration.gradle"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.16.20'
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.postgresql:postgresql:9.4.1211.jre7')
	compile('org.flywaydb:flyway-core:4.0.3')
	testCompile group: 'org.mockito', name: 'mockito-all', version: '1.8.4'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile ('com.h2database:h2:1.4.197')
}

String cleanflyway=System.getProperty("cleanflyway")



task dropAll(){
	apply from: "configuration.gradle"
	if(cleanflyway.equals("true")){
		flyway{
			url="jdbc:postgresql://localhost:7654/spicinemas"
			user="spiuser"
			password="spiuser"
		}
		
	}

}
if(cleanflyway.equals("true")){
	     println("droping all schemas")
		dropAll.finalizedBy(flywayClean);
}
